// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AlquilaFacilPlatform.Tests.CoreBehaviourDrivenDevelopment
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class VisualizarInformacionDelEspacioFeature : object, Xunit.IClassFixture<VisualizarInformacionDelEspacioFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "US06VisualizarInformaciónDelEspacio.feature"
#line hidden
        
        public VisualizarInformacionDelEspacioFeature(VisualizarInformacionDelEspacioFeature.FixtureData fixtureData, AlquilaFacilPlatform_Tests_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CoreBehaviourDrivenDevelopment", "Visualizar información del espacio", "  Como arrendatario,\r\n  Quiero poder visualizar información detallada del espacio" +
                    ",\r\n  Para evaluar si cumple con los requisitos de mi evento antes de hacer una r" +
                    "eserva.", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public void TestInitialize()
        {
        }
        
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Visualización general del espacio")]
        [Xunit.TraitAttribute("FeatureTitle", "Visualizar información del espacio")]
        [Xunit.TraitAttribute("Description", "Visualización general del espacio")]
        [Xunit.InlineDataAttribute("Salón de eventos", "100", "Espacio amplio con iluminación moderna y sistema de sonido", "Wi-Fi, aire acondicionado, estacionamiento", new string[0])]
        [Xunit.InlineDataAttribute("Auditorio principal", "200", "Auditorio con proyector y sistema de sonido profesional", "Wi-Fi, proyector, estacionamiento", new string[0])]
        public void VisualizacionGeneralDelEspacio(string espacio, string aforoMaximo, string descripcion, string servicios, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("espacio", espacio);
            argumentsOfScenario.Add("aforo máximo", aforoMaximo);
            argumentsOfScenario.Add("descripción", descripcion);
            argumentsOfScenario.Add("servicios", servicios);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Visualización general del espacio", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 7
  this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
    testRunner.Given("que el arrendatario selecciona un espacio en AlquilaFácil.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
    testRunner.When(string.Format("accede a la página de detalles del {0}.", espacio), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 10
    testRunner.Then(string.Format("puede visualizar información detallada como el {0}, {1} del espacio y {2} disponi" +
                            "bles.", aforoMaximo, descripcion, servicios), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Visualización de reseñas y calificaciones")]
        [Xunit.TraitAttribute("FeatureTitle", "Visualizar información del espacio")]
        [Xunit.TraitAttribute("Description", "Visualización de reseñas y calificaciones")]
        [Xunit.InlineDataAttribute("\"Excelente espacio, perfecto para eventos grandes\"", "5", new string[0])]
        [Xunit.InlineDataAttribute("\"El lugar es bueno, pero podría mejorar la ventilación\"", "3", new string[0])]
        [Xunit.InlineDataAttribute("\"Muy acogedor, ideal para reuniones pequeñas\"", "4", new string[0])]
        public void VisualizacionDeResenasYCalificaciones(string comentarios, string calificaciones, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("comentarios", comentarios);
            argumentsOfScenario.Add("calificaciones", calificaciones);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Visualización de reseñas y calificaciones", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 18
  this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 19
    testRunner.Given("que el arrendatario está interesado en conocer opiniones de otros usuarios", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 20
    testRunner.When("accede a la pestaña de “Reseñas” dentro del perfil del espacio", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 21
    testRunner.Then(string.Format("puede ver una lista con los {0} de los usuarios y las {1} en estrellas", comentarios, calificaciones), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                VisualizarInformacionDelEspacioFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                VisualizarInformacionDelEspacioFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
