// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace AlquilaFacilPlatform.Tests.CoreBehaviourDrivenDevelopment
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class VisualizarEspaciosReportadosPorElUsuarioFeature : object, Xunit.IClassFixture<VisualizarEspaciosReportadosPorElUsuarioFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "US16VisualizarEspaciosReportadosPorElUsuario.feature"
#line hidden
        
        public VisualizarEspaciosReportadosPorElUsuarioFeature(VisualizarEspaciosReportadosPorElUsuarioFeature.FixtureData fixtureData, AlquilaFacilPlatform_Tests_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CoreBehaviourDrivenDevelopment", "Visualizar espacios reportados por el usuario", "  Como usuario de AlquilaFácil,\r\n  Quiero poder visualizar los espacios que he re" +
                    "portado,\r\n  Para realizar un seguimiento de mis reportes y gestionarlos.", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public void TestInitialize()
        {
        }
        
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Navegar a la sección de \"Ver Espacios Reportados\"")]
        [Xunit.TraitAttribute("FeatureTitle", "Visualizar espacios reportados por el usuario")]
        [Xunit.TraitAttribute("Description", "Navegar a la sección de \"Ver Espacios Reportados\"")]
        [Xunit.InlineDataAttribute("Espacio A", "2023-10-01", "Infracción de normas", new string[0])]
        [Xunit.InlineDataAttribute("Espacio B", "2023-10-02", "Problemas de limpieza", new string[0])]
        [Xunit.InlineDataAttribute("Espacio C", "2023-10-03", "Ruido excesivo", new string[0])]
        public void NavegarALaSeccionDeVerEspaciosReportados(string nombre, string fecha, string motivo, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("nombre", nombre);
            argumentsOfScenario.Add("fecha", fecha);
            argumentsOfScenario.Add("motivo", motivo);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Navegar a la sección de \"Ver Espacios Reportados\"", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 7
  this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
    testRunner.Given("que el usuario ha iniciado sesión en su cuenta de AlquilaFácil", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
    testRunner.When("accede a la sección de \"Ver Espacios Reportados\" desde el panel de control", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 10
    testRunner.Then(string.Format("puede ver una lista de los espacios que ha reportado, incluyendo información como" +
                            " el {0} del espacio, la {1} del reporte, y el {2} del reporte", nombre, fecha, motivo), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Eliminar un reporte deslizando hacia la izquierda")]
        [Xunit.TraitAttribute("FeatureTitle", "Visualizar espacios reportados por el usuario")]
        [Xunit.TraitAttribute("Description", "Eliminar un reporte deslizando hacia la izquierda")]
        [Xunit.InlineDataAttribute("eliminación", "Espacio A", new string[0])]
        [Xunit.InlineDataAttribute("eliminación", "Espacio B", new string[0])]
        [Xunit.InlineDataAttribute("eliminación", "Espacio C", new string[0])]
        public void EliminarUnReporteDeslizandoHaciaLaIzquierda(string eliminacion, string reporte, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("eliminación", eliminacion);
            argumentsOfScenario.Add("reporte", reporte);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Eliminar un reporte deslizando hacia la izquierda", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 18
  this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 19
    testRunner.Given("que el usuario se encuentra en la lista de espacios reportados", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 20
    testRunner.When("desliza uno de los reportes hacia la izquierda", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 21
    testRunner.Then(string.Format("aparece una opción para confirmar la {0} del {1}. Y si confirma, el reporte se el" +
                            "imina de la lista", eliminacion, reporte), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                VisualizarEspaciosReportadosPorElUsuarioFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                VisualizarEspaciosReportadosPorElUsuarioFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
